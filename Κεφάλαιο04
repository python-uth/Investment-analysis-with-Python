# Υπολογισμός Αποδόσεων
# εισάγουμε τις βιβλιοθήκες που θα χρειαστούμε
import yfinance as yf
import numpy as np
# Καθορίζουμε τον κωδικό διαπραγμάτευσης (ticker symbol) της μετοχής που θέλουμε να αναλύσουμε
ticker = "HTO.AT"  # Εδώ βάζουμε τον κωδικό διαπραγμάτευσης της μετοχής
# Κατεβάζουμε τις ιστορικές τιμές κλεισίματος για το τελευταίο έτος
data = yf.download(ticker, period='1y')[['Close']]
data.columns = [ticker] # Μετονομασία του τίτλου της στήλης
# Υπολογισμός της ημερήσιας ποσοστιαίας απόδοσης
returns = data[ticker].pct_change().dropna()  # με την εντολή dropna() σβήνουμε όσες ημερομηνίες δεν έχουν παρατηρήσεις
print(returns.head(3)) # με την εντολή αυτή εμφανίζονται οι 3 πρώτες γραμμές του αντικειμένου που περιέχει τις ημερήσιες αποδόσεις για το τελευταίο έτος

# περιγραφικά στατιστικά της χρονοσειράς των αποδόσεων
returns.describe()  # έχουμε το όνομα του αντικειμένου (στην περίπτωσή μας returns) και την εντολή describe() 

# ιστόγραμμα των αποδόσεων
import matplotlib.pyplot as plt # εισάγουμε τη βιβλιοθήκη Matplotlib
import seaborn as sns # εισάγουμε τη βιβλιοθήκη seaborn
fig = plt.figure(figsize=(10,5)) # ορίζουμε το μέγεθος του γραφήματος
sns.histplot(returns, kde=True)
plt.xlabel('Ημερήσια Απόδοση')
plt.ylabel('Πιθανότητα')
plt.title('Αποδόσεις ΟΤΕ')
plt.show()

# Ορισμός συνάρτησης για τον υπολογισμό αριθμητικού και γεωμετρικού μέσου όρου αποδόσεων
def calculate_means(returns):
    """
    Υπολογίζει τον αριθμητικό και γεωμετρικό μέσο όρο μιας σειράς αποδόσεων
    Παράμετροι:
    - returns: Μια λίστα αποδόσεων
    Αποτέλεσμα:
    - εμφανίζει τον αριθμητικό και τον γεωμετρικό μέσο όρο των αποδόσεων
    """
    import numpy as np # εισάγουμε την απαραίτητη βιβλιοθήκη
        # Υπολογισμός Αριθμητικού μέσου
    arithmetic_mean = np.mean(returns)
        # ΥπολογισμόςΓεωμετρικού μέσου
    geometric_mean = np.prod([(1 + r) for r in returns])**(1/len(returns)) - 1
        print(f"Αριθμητικός μέσος όρος: {arithmetic_mean:.4%}")
    print(f"Γεωμετρικός μέσος όρος: {geometric_mean:.4%}")

# Υπολογισμός Αποδόσεων ΟΤΕ
import yfinance as yf  # εισάγουμε τη βιβλιοθήκη για την άντληση των ιστορικών στοιχείων
# Καθορίζουμε τον κωδικό διαπραγμάτευσης (ticker symbol) της μετοχής που θέλουμε να αναλύσουμε
ticker = "HTO.AT"  # Εδώ βάζουμε τον κωδικό διαπραγμάτευσης της μετοχής του ΟΤΕ
# Κατεβάζουμε τις ιστορικές τιμές κλεισίματος για το τελευταίο έτος
data = yf.download(ticker, period='1y')[['Close']]
data.columns = [ticker] # Μετονομασία του τίτλου της στήλης
# Υπολογισμός της ημερήσιας ποσοστιαίας απόδοσης
returns = data[ticker].pct_change().dropna()
# καλούμε τη συνάρτηση
calculate_means(returns)

# ορίζουμε τη συνάρτηση με την ονομασία calculate_means_actual που υπολογίζει τον αριθμητικό και γεωμετρικό μέσο όρο των ιστορικών αποδόσεων μιας μετοχής για μια περίοδο. Η συγκεκριμένη συνάρτηση χρειάζεται δύο μεταβλητές: τον κωδικό διαπραγμάτευσης (ticker) και την περίοδο για την οποία θα υπολογιστούν οι ημερήσιες αποδόσεις (period).
def calculate_means_actual(ticker, period):
    """
    Υπολογίζει τον αριθμητικό και γεωμετρικό μέσο όρο για συγκεκριμένη μετοχή για ορισμένη περίοδο.
    Παράμετροι:
    ticker (str): Ο κωδικός διαπραγμάτευσης (ticker) της μετοχής που θέλουμε να αναλύσουμε.
    period (str): Η χρονική περίοδος για την οποία θέλουμε να αντλήσουμε στοιχεία.
                  Οι αποδεκτές τιμές είναι οι εξής: "1d", "5d", "1mo", "3mo", "6mo", "1y", "2y", "5y", "10y", "ytd", "max"
    Αποτέλεσμα:
    - εμφανίζει τον αριθμητικό και τον γεωμετρικό μέσο όρο των αποδόσεων.
    """
    # εισάγουμε τις βιβλιοθήκες που θα χρειαστο΄ύμε
    import yfinance as yf
    import numpy as np
    # Κατεβάζουμε τις ιστορικές τιμές κλεισίματος για τη ζητούμενη περίοδο
    data = yf.download(ticker, period=period)[['Close']]
    data.columns = [ticker] # Μετονομασία του τίτλου της στήλης
    # Υπολογισμός της ημερήσιας ποσοστιαίας απόδοσης
    returns = data[ticker].pct_change().dropna()
    # Υπολογισμός Αριθμητικού μέσου
    arithmetic_mean = np.mean(returns)
    # ΥπολογισμόςΓεωμετρικού μέσου
    geometric_mean = np.prod([(1 + r) for r in returns])**(1/len(returns)) - 1
    print(f"Αριθμητικός μέσος όρος: {arithmetic_mean:.4%}")
    print(f"Γεωμετρικός μέσος όρος: {geometric_mean:.4%}")
    return
