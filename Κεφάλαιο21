# Ανάλυση Επενδυτικού Στυλ (Style Analysis)
# εισάγουμε τις απαραίτητες βιβλιοθήκες
import pandas_datareader as pdr
import datetime as dt
import yfinance as yf
import pandas as pd
from scipy.optimize import minimize
import numpy as np

# Ορίζουμε την χρονική περίοδο και το ETF
start = dt.datetime(2010, 1, 1)
end = dt.datetime(2023, 12, 31)
ticker = 'AVUS'

# Κατεβάζουμε στοιχεία για τους παράγοντες Fama-French
fama_french_data = pdr.get_data_famafrench('F-F_Research_Data_Factors', start=start, end=end)
ff_factors = fama_french_data[0]

# Κατεβάζουμε μηνιαίες τιμές για το ETF από Yahoo Finance
ETF_prices = yf.download(ticker, start=start, end=end, interval="1mo")

# Υπολογίζουμε τις μηνιαίες αποδόσεις του ETF
ETF_returns = ETF_prices['Adj Close'].pct_change() * 100

# Δημιουργούμε ένα dataframe
ff_factors.index = ff_factors.index.to_timestamp() # μετατρέπουμε τον δείκτη του ff_factors για να είναι συμβατός με τον δείκτη του ETF_returns
df = pd.concat([ff_factors, ETF_returns], axis=1) # εν΄΄΄ώνουμε τα δύο dataframe
df.rename(columns={'Adj Close': 'ETF_Returns'}, inplace=True)
df.drop(columns=['RF'], inplace=True)
df.dropna(inplace=True)

# υπολογισμός Style Analysis
# ορισμός της συνάρτησης που θα ελαχιστοποιήσουμε
def objective_function(c, data):
    diff = data['ETF_Returns'] - (c[0] * data['Mkt-RF'] + c[1] * data['SMB'] + c[2] * data['HML'])
    return np.var(diff)

# ορισμός των περιορισμών
def constraint(c):
    return c[0] + c[1] + c[2] - 1

# ορισμός ορίων
bounds = [(0, None), (0, None), (0, None)]

# Αρχικές τιμές
c0 = [0.4, 0.3, 0.3]

# Ελαχιστοποιούμε τη συνάρτηση που ορίσαμε με βάση τους περιορισμούς
solution = minimize(objective_function, c0, args=(df,), method='SLSQP', constraints={'type': 'eq', 'fun': constraint}, bounds=bounds)
optimized_percentages = solution.x * 100

# Εμφανίζουμε τη λύση ως ποσοστά
print("Αγορά, Μέγεθος, Value:")
print([f"{p:.2f}%" for p in optimized_percentages])
